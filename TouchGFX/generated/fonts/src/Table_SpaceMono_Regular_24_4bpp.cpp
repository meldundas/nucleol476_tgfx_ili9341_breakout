// Autogenerated, do not edit

#include <fonts/GeneratedFont.hpp>

FONT_TABLE_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::GlyphNode glyphs_SpaceMono_Regular_24_4bpp[] FONT_TABLE_LOCATION_FLASH_ATTRIBUTE = {
    {                 0, 0x0020,   0,   0,   0,   0,  15,   0,   0, 0x00 }, // space
    {                 0, 0x0021,   4,  16,  16,   5,  15,   0,   0, 0x00 }, // exclam
    {                32, 0x0022,   9,   6,  16,   3,  15,   0,   0, 0x00 }, // quotedbl
    { 0x40000000 |   62, 0x0023,  12,  12,  15,   1,  15,   0,   0, 0x00 }, // numbersign
    { 0x40000000 |  129, 0x0024,  11,  16,  17,   2,  15,   0,   0, 0x00 }, // dollar
    { 0x40000000 |  209, 0x0025,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // percent
    { 0x40000000 |  292, 0x0026,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // ampersand
    {               376, 0x0027,   4,   6,  16,   5,  15,   0,   0, 0x00 }, // quotesingle
    { 0x40000000 |  388, 0x0028,  11,  24,  20,   3,  15,   0,   0, 0x00 }, // parenleft
    { 0x40000000 |  460, 0x0029,  10,  24,  20,   1,  15,   0,   0, 0x00 }, // parenright
    { 0x40000000 |  526, 0x002A,  13,  12,  14,   1,  15,   0,   0, 0x00 }, // asterisk
    { 0x40000000 |  592, 0x002B,  11,  10,  13,   2,  15,   0,   0, 0x00 }, // plus
    {               626, 0x002C,   4,   7,   4,   5,  15,   0,   0, 0x00 }, // comma
    { 0x80000000 |  640, 0x002D,   8,   2,   7,   3,  15,   0,   0, 0x00 }, // hyphen
    {               646, 0x002E,   4,   4,   4,   5,  15,   0,   0, 0x00 }, // period
    { 0x40000000 |  654, 0x002F,   9,  22,  19,   3,  15,   0,   0, 0x00 }, // slash
    { 0x40000000 |  710, 0x0030,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // zero
    { 0x40000000 |  804, 0x0031,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // one
    { 0x40000000 |  869, 0x0032,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // two
    { 0x40000000 |  946, 0x0033,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // three
    { 0x40000000 | 1023, 0x0034,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // four
    { 0x40000000 | 1098, 0x0035,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // five
    { 0x40000000 | 1183, 0x0036,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // six
    { 0x40000000 | 1273, 0x0037,  12,  16,  16,   1,  15,   0,   0, 0x00 }, // seven
    { 0x40000000 | 1324, 0x0038,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // eight
    { 0x40000000 | 1414, 0x0039,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // nine
    { 0x40000000 | 1503, 0x003A,   4,  12,  12,   5,  15,   0,   0, 0x00 }, // colon
    { 0x40000000 | 1522, 0x003B,   4,  15,  12,   5,  15,   0,   0, 0x00 }, // semicolon
    { 0x80000000 | 1549, 0x003C,  11,  11,  14,   2,  15,   0,   0, 0x00 }, // less
    { 0x80000000 | 1591, 0x003D,  11,   5,  11,   2,  15,   0,   0, 0x00 }, // equal
    { 0x40000000 | 1610, 0x003E,  11,  11,  14,   2,  15,   0,   0, 0x00 }, // greater
    { 0x40000000 | 1653, 0x003F,  12,  16,  16,   1,  15,   0,   0, 0x00 }, // question
    { 0x40000000 | 1713, 0x0040,  14,  14,  14,   0,  15,   0,   0, 0x00 }, // at
    { 0x40000000 | 1810, 0x0041,  15,  16,  16,   0,  15,   0,   0, 0x00 }, // A
    { 0x40000000 | 1892, 0x0042,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // B
    { 0x40000000 | 1985, 0x0043,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // C
    { 0x40000000 | 2059, 0x0044,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // D
    { 0x80000000 | 2146, 0x0045,  11,  16,  16,   2,  15,   0,   0, 0x00 }, // E
    { 0x40000000 | 2206, 0x0046,  11,  16,  16,   2,  15,   0,   0, 0x00 }, // F
    { 0x40000000 | 2262, 0x0047,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // G
    { 0x40000000 | 2352, 0x0048,  12,  16,  16,   1,  15,   0,   0, 0x00 }, // H
    { 0x80000000 | 2420, 0x0049,  11,  16,  16,   2,  15,   0,   0, 0x00 }, // I
    { 0x40000000 | 2475, 0x004A,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // J
    { 0x40000000 | 2539, 0x004B,  12,  16,  16,   2,  15,   0,   0, 0x00 }, // K
    { 0x40000000 | 2620, 0x004C,  11,  16,  16,   2,  15,   0,   0, 0x00 }, // L
    {              2668, 0x004D,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // M
    { 0x40000000 | 2780, 0x004E,  12,  16,  16,   1,  15,   0,   0, 0x00 }, // N
    { 0x40000000 | 2872, 0x004F,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // O
    { 0x40000000 | 2959, 0x0050,  12,  16,  16,   2,  15,   0,   0, 0x00 }, // P
    { 0x40000000 | 3026, 0x0051,  13,  21,  16,   1,  15,   0,   0, 0x00 }, // Q
    { 0x40000000 | 3130, 0x0052,  12,  16,  16,   2,  15,   0,   0, 0x00 }, // R
    { 0x40000000 | 3215, 0x0053,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // S
    { 0x40000000 | 3304, 0x0054,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // T
    { 0x40000000 | 3354, 0x0055,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // U
    { 0x40000000 | 3436, 0x0056,  14,  16,  16,   0,  15,   0,   0, 0x00 }, // V
    {              3515, 0x0057,  15,  16,  16,   0,  15,   0,   0, 0x00 }, // W
    { 0x40000000 | 3643, 0x0058,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // X
    { 0x40000000 | 3725, 0x0059,  14,  16,  16,   0,  15,   0,   0, 0x00 }, // Y
    { 0x80000000 | 3791, 0x005A,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // Z
    { 0x40000000 | 3854, 0x005B,   5,  24,  20,   6,  15,   0,   0, 0x00 }, // bracketleft
    { 0x40000000 | 3918, 0x005C,   9,  22,  19,   3,  15,   0,   0, 0x00 }, // backslash
    { 0x40000000 | 3973, 0x005D,   5,  24,  20,   4,  15,   0,   0, 0x00 }, // bracketright
    { 0x40000000 | 4036, 0x005E,  12,   7,  17,   1,  15,   0,   0, 0x00 }, // asciicircum
    { 0x80000000 | 4070, 0x005F,  12,   2, 255,   1,  15,   0,   0, 0x60 }, // underscore
    { 0x40000000 | 4078, 0x0060,   5,   3,  16,   5,  15,   0,   0, 0x00 }, // grave
    { 0x40000000 | 4086, 0x0061,  13,  12,  12,   1,  15,   0,   0, 0x00 }, // a
    { 0x40000000 | 4159, 0x0062,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // b
    { 0x40000000 | 4240, 0x0063,  13,  12,  12,   1,  15,   0,   0, 0x00 }, // c
    { 0x40000000 | 4299, 0x0064,  13,  16,  16,   1,  15,   0,   0, 0x00 }, // d
    { 0x40000000 | 4382, 0x0065,  13,  12,  12,   1,  15,   0,   0, 0x00 }, // e
    { 0x40000000 | 4448, 0x0066,  11,  16,  16,   2,  15,   0,   0, 0x00 }, // f
    { 0x40000000 | 4502, 0x0067,  12,  17,  12,   1,  15,   0,   0, 0x00 }, // g
    { 0x40000000 | 4581, 0x0068,  11,  16,  16,   2,  15,   0,   0, 0x00 }, // h
    { 0x40000000 | 4649, 0x0069,  11,  16,  16,   2,  15,   0,   0, 0x00 }, // i
    { 0x40000000 | 4704, 0x006A,   9,  21,  16,   2,  15,   0,   0, 0x00 }, // j
    { 0x40000000 | 4761, 0x006B,  10,  16,  16,   3,  15,   0,   0, 0x00 }, // k
    { 0x40000000 | 4827, 0x006C,  11,  16,  16,   2,  15,   0,   0, 0x00 }, // l
    {              4879, 0x006D,  13,  12,  12,   1,  15,   0,   0, 0x00 }, // m
    { 0x40000000 | 4963, 0x006E,  11,  12,  12,   2,  15,   0,   0, 0x00 }, // n
    { 0x40000000 | 5023, 0x006F,  13,  12,  12,   1,  15,   0,   0, 0x00 }, // o
    { 0x40000000 | 5087, 0x0070,  13,  17,  12,   1,  15,   0,   0, 0x00 }, // p
    { 0x40000000 | 5171, 0x0071,  13,  17,  12,   1,  15,   0,   0, 0x00 }, // q
    { 0x40000000 | 5258, 0x0072,  13,  12,  12,   1,  15,   0,   0, 0x00 }, // r
    { 0x40000000 | 5311, 0x0073,  11,  12,  12,   2,  15,   0,   0, 0x00 }, // s
    { 0x40000000 | 5372, 0x0074,  11,  16,  16,   1,  15,   0,   0, 0x00 }, // t
    { 0x40000000 | 5425, 0x0075,  12,  12,  12,   1,  15,   0,   0, 0x00 }, // u
    { 0x40000000 | 5483, 0x0076,  13,  12,  12,   1,  15,   0,   0, 0x00 }, // v
    { 0x40000000 | 5543, 0x0077,  15,  12,  12,   0,  15,   0,   0, 0x00 }, // w
    { 0x40000000 | 5637, 0x0078,  12,  12,  12,   1,  15,   0,   0, 0x00 }, // x
    { 0x40000000 | 5695, 0x0079,  11,  17,  12,   2,  15,   0,   0, 0x00 }, // y
    { 0x80000000 | 5774, 0x007A,  11,  12,  12,   2,  15,   0,   0, 0x00 }  // z
};

// SpaceMono_Regular_24_4bpp
FONT_TABLE_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::GlyphNode glyphs_SpaceMono_Regular_24_4bpp[] FONT_TABLE_LOCATION_FLASH_ATTRIBUTE;
FONT_GLYPH_LOCATION_FLASH_PRAGMA
KEEP extern const uint8_t unicodes_SpaceMono_Regular_24_4bpp_0[] FONT_GLYPH_LOCATION_FLASH_ATTRIBUTE;
FONT_SEARCHTABLE_LOCATION_FLASH_PRAGMA
KEEP extern const uint8_t* const unicodes_SpaceMono_Regular_24_4bpp[] FONT_SEARCHTABLE_LOCATION_FLASH_ATTRIBUTE = {
    unicodes_SpaceMono_Regular_24_4bpp_0
};
FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_SpaceMono_Regular_24_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::CompressedMappedFont& getFont_SpaceMono_Regular_24_4bpp();

// Compressed size: 5822, uncompressed size: 8055
// Compression: 72%
// Minimal Cache requirement: 155 bytes
touchgfx::CompressedMappedFont& getFont_SpaceMono_Regular_24_4bpp()
{
    static touchgfx::CompressedMappedFont SpaceMono_Regular_24_4bpp(glyphs_SpaceMono_Regular_24_4bpp, 91, 29, 24, 0, 0, 4, 1, 0, 0, unicodes_SpaceMono_Regular_24_4bpp, kerning_SpaceMono_Regular_24_4bpp, 63, 0, 0, 0);
    return SpaceMono_Regular_24_4bpp;
}
